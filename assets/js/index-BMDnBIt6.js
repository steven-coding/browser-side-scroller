var d=Object.defineProperty;var u=(o,e,t)=>e in o?d(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var r=(o,e,t)=>u(o,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function t(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(s){if(s.ep)return;s.ep=!0;const a=t(s);fetch(s.href,a)}})();class g{constructor(e,t="/themes/desert-theme.json"){r(this,"obstacles",[]);r(this,"sprites",{});r(this,"theme");r(this,"canvasHeight");r(this,"cameraX",0);r(this,"lastObstacleX",0);this.canvasHeight=e,this.loadTheme(t)}async loadTheme(e){try{const t="/browser-side-scroller",i=t.endsWith("/")?t+e.slice(1):t+e,s=await fetch(i);this.theme=await s.json(),this.loadSprites(),this.generateInitialObstacles()}catch(t){console.error("Failed to load theme:",t),this.loadDefaultTheme()}}loadDefaultTheme(){this.theme={name:"Desert",spritePath:"sprites/world/desert",background:{skyGradient:{top:"#FFE4B5",bottom:"#DEB887"},mountains:{color:"#CD853F",parallaxSpeed:.3,points:[{x:0,y:150},{x:200,y:200},{x:400,y:180},{x:600,y:220},{x:800,y:160},{x:1e3,y:150}]}},ground:{color:"#F4A460",textureColor:"#DEB887",height:50,textureSize:20,textureDensity:.7},obstacles:{types:[{name:"cactus",width:60,height:120,weight:1},{name:"rock",width:80,height:50,weight:1},{name:"tumbleweed",width:70,height:70,weight:1}],generation:{count:15,minDistance:400,maxDistance:800,startDistance:200,safeZoneDistance:1e3,doubleObstacleChance:.3,doubleObstacleSpacing:10},fallbackColor:"#8B4513"},world:{width:2e3}},this.loadSprites(),this.generateInitialObstacles()}loadSprites(){this.theme&&this.theme.obstacles.types.forEach(e=>{const t=new Image,i="/browser-side-scroller",s=`/${this.theme.spritePath}/${e.name}.svg`;t.src=i.endsWith("/")?i+s.slice(1):i+s,this.sprites[e.name]=t})}generateInitialObstacles(){if(!this.theme)return;const e=this.theme.obstacles;let t=e.generation.startDistance+e.generation.safeZoneDistance;for(let i=0;i<e.generation.count;i++)t=this.generateObstacleAtPosition(t);this.lastObstacleX=t}generateObstacleAtPosition(e){if(!this.theme)return e;const t=this.theme.obstacles,i=t.types[Math.floor(Math.random()*t.types.length)],s=this.canvasHeight-this.theme.ground.height-i.height;this.obstacles.push({x:e,y:s,width:i.width,height:i.height,sprite:this.sprites[i.name],type:i.name});let a=e;if(Math.random()<t.generation.doubleObstacleChance){const n=t.types[Math.floor(Math.random()*t.types.length)],h=this.canvasHeight-this.theme.ground.height-n.height;a=e+i.width+t.generation.doubleObstacleSpacing,this.obstacles.push({x:a,y:h,width:n.width,height:n.height,sprite:this.sprites[n.name],type:n.name}),a+=n.width}else a+=i.width;return a+t.generation.minDistance+Math.random()*(t.generation.maxDistance-t.generation.minDistance)}generateNewObstacles(){if(!this.theme)return;const e=1500;for(;this.lastObstacleX<this.cameraX+e;)this.lastObstacleX=this.generateObstacleAtPosition(this.lastObstacleX);const t=500;this.obstacles=this.obstacles.filter(i=>i.x>this.cameraX-t)}render(e,t){this.cameraX=t,this.generateNewObstacles(),this.drawBackground(e),this.drawGround(e),this.drawObstacles(e)}drawBackground(e){if(!this.theme)return;const t=e.createLinearGradient(0,0,0,this.canvasHeight);t.addColorStop(0,this.theme.background.skyGradient.top),t.addColorStop(1,this.theme.background.skyGradient.bottom),e.fillStyle=t,e.fillRect(0,0,e.canvas.width,this.canvasHeight),e.fillStyle=this.theme.background.mountains.color,e.beginPath();const i=-this.cameraX*this.theme.background.mountains.parallaxSpeed,s=this.theme.background.mountains.points;e.moveTo(i+s[0].x,this.canvasHeight-s[0].y);for(let a=1;a<s.length;a++)e.lineTo(i+s[a].x,this.canvasHeight-s[a].y);e.lineTo(e.canvas.width,this.canvasHeight-s[s.length-1].y),e.lineTo(e.canvas.width,this.canvasHeight),e.lineTo(0,this.canvasHeight),e.closePath(),e.fill()}drawGround(e){if(!this.theme)return;const t=this.theme.ground;e.fillStyle=t.color,e.fillRect(0,this.canvasHeight-t.height,e.canvas.width,t.height),e.fillStyle=t.textureColor;for(let i=0;i<e.canvas.width;i+=t.textureSize)for(let s=this.canvasHeight-t.height;s<this.canvasHeight;s+=10)Math.random()>t.textureDensity&&e.fillRect(i+this.cameraX%t.textureSize,s,2,2)}drawObstacles(e){this.theme&&this.obstacles.forEach(t=>{const i=t.x-this.cameraX;i>-t.width&&i<e.canvas.width&&(t.sprite&&t.sprite.complete?e.drawImage(t.sprite,i,t.y,t.width,t.height):(e.fillStyle=this.theme.obstacles.fallbackColor,e.fillRect(i,t.y,t.width,t.height)))})}checkCollision(e,t,i,s){for(const a of this.obstacles)if(e<a.x+a.width&&e+i>a.x&&t<a.y+a.height&&t+s>a.y)return!0;return!1}getWorldWidth(){return this.theme?this.theme.world.width:2e3}}class y{constructor(){r(this,"cupSprite");r(this,"animationTime",0);r(this,"fadeInDuration",500);r(this,"cupBounce",0);this.cupSprite=new Image,this.cupSprite.src="/sprites/winners-cup.svg"}render(e,t,i,s,a){this.animationTime+=a;const n=Math.min(1,this.animationTime/this.fadeInDuration);if(e.fillStyle=`rgba(0, 0, 0, ${.8*n})`,e.fillRect(0,0,t,i),n<.1)return;const h=t/2,l=i/2;if(this.cupBounce=Math.sin(this.animationTime*.003)*5,this.cupSprite.complete){const m=l-120+this.cupBounce;e.save(),e.globalAlpha=n,e.drawImage(this.cupSprite,h-80/2,m,80,80*(4/3)),e.restore()}e.save(),e.globalAlpha=n,e.textAlign="center",e.fillStyle="#FFD700",e.font="bold 48px Arial",e.fillText("GAME OVER",h,l+20),e.fillStyle="#FFFFFF",e.font="bold 24px Arial",e.fillText("Distance Reached:",h,l+60),e.fillStyle="#00FF88",e.font="bold 32px Arial",e.fillText(`${Math.floor(s/10)}m`,h,l+100),e.fillStyle="#FFDD44",e.font="18px Arial";const c=this.getAchievementMessage(s);e.fillText(c,h,l+140);const p=.7+.3*Math.sin(this.animationTime*.005);e.fillStyle=`rgba(255, 255, 255, ${p})`,e.font="bold 20px Arial",e.fillText("Press ENTER to restart",h,l+180),this.drawStars(e,h,l,n),e.restore()}getAchievementMessage(e){const t=Math.floor(e/10);return t<50?"Keep practicing!":t<100?"Getting warmed up!":t<200?"Nice run!":t<300?"Great distance!":t<500?"Excellent performance!":t<750?"Outstanding run!":t<1e3?"Amazing achievement!":t<1500?"Legendary distance!":"SONIC SPEED MASTER!"}drawStars(e,t,i,s){e.save(),e.globalAlpha=s*.6,e.fillStyle="#FFD700",[{x:t-150,y:i-80,size:3},{x:t+140,y:i-60,size:2},{x:t-180,y:i+20,size:2.5},{x:t+170,y:i+40,size:3},{x:t-120,y:i+100,size:2},{x:t+130,y:i+120,size:2.5}].forEach((n,h)=>{const l=Math.sin(this.animationTime*.004+h)*.5+.5,c=n.size*(.7+.3*l);this.drawStar(e,n.x,n.y,c)}),e.restore()}drawStar(e,t,i,s){e.beginPath();for(let a=0;a<5;a++){const n=a*4*Math.PI/5,h=t+Math.cos(n)*s,l=i+Math.sin(n)*s;a===0?e.moveTo(h,l):e.lineTo(h,l)}e.closePath(),e.fill()}reset(){this.animationTime=0,this.cupBounce=0}}class f{constructor(){r(this,"canvas");r(this,"ctx");r(this,"gameRunning",!1);r(this,"lastTime",0);r(this,"keys",{});r(this,"playerSprite");r(this,"level");r(this,"cameraX",0);r(this,"gameSpeed",2);r(this,"playerSpritePath","/sprites/sonic-player.svg");r(this,"gameOverMessage");r(this,"player");r(this,"gameLoop",()=>{this.gameRunning&&(this.update(),this.render(),requestAnimationFrame(this.gameLoop))});this.canvas=document.getElementById("gameCanvas"),this.ctx=this.canvas.getContext("2d"),this.setupCanvas(),this.player={x:50,y:this.canvas.height-130,width:80,height:80,color:"#00ff00",velocityY:0,isJumping:!1,jumpPower:21.2,gravity:.25},this.playerSprite=new Image,this.loadPlayerSprite(),this.level=new g(this.canvas.height),this.gameOverMessage=new y,this.setupEventListeners()}loadPlayerSprite(e){e&&(this.playerSpritePath=e),this.playerSprite.src=this.playerSpritePath}setPlayerSprite(e){this.loadPlayerSprite(e)}setupCanvas(){this.resizeCanvas(),window.addEventListener("resize",()=>this.resizeCanvas())}resizeCanvas(){const e=this.canvas.getBoundingClientRect();this.canvas.width=e.width,this.canvas.height=e.height,this.player&&(this.player.y=this.canvas.height-130),this.level&&(this.level=new g(this.canvas.height))}setupEventListeners(){document.addEventListener("keydown",e=>{if(console.log("Key pressed:",e.key,"Game running:",this.gameRunning),this.keys[e.key]=!0,e.key==="Enter"&&!this.gameRunning){console.log("Attempting to restart game..."),this.restartGame(),e.preventDefault();return}["Space","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Enter"].includes(e.code)&&e.preventDefault()}),document.addEventListener("keyup",e=>{this.keys[e.key]=!1,e.preventDefault()})}update(){this.keys[" "]&&!this.player.isJumping&&(this.player.velocityY=-this.player.jumpPower,this.player.isJumping=!0),this.player.velocityY+=this.player.gravity,this.player.y+=this.player.velocityY;const e=this.canvas.height-50;this.player.y+this.player.height>=e&&(this.player.y=e-this.player.height,this.player.velocityY=0,this.player.isJumping=!1),this.cameraX+=this.gameSpeed;const t=this.player.x+this.cameraX;this.level.checkCollision(t,this.player.y,this.player.width,this.player.height)&&(this.gameRunning=!1,this.gameOverMessage.reset(),console.log("Game Over! Hit an obstacle."))}render(){if(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.level.render(this.ctx,this.cameraX),this.playerSprite.complete?this.ctx.drawImage(this.playerSprite,this.player.x,this.player.y,this.player.width,this.player.height):(this.ctx.fillStyle=this.player.color,this.ctx.fillRect(this.player.x,this.player.y,this.player.width,this.player.height)),this.gameRunning)this.ctx.fillStyle="#000",this.ctx.font="16px Arial",this.ctx.fillText("Press SPACE to jump",10,30),this.ctx.fillText(`Distance: ${Math.floor(this.cameraX/10)}m`,10,50);else{const e=this.cameraX,t=Date.now()-this.lastTime;this.gameOverMessage.render(this.ctx,this.canvas.width,this.canvas.height,e,t)}}run(){console.log("Starting browser side scroller..."),this.gameRunning=!0,requestAnimationFrame(this.gameLoop)}stop(){this.gameRunning=!1}restartGame(){console.log("Restarting game..."),this.player.x=50,this.player.y=this.canvas.height-130,this.player.velocityY=0,this.player.isJumping=!1,this.cameraX=0,this.gameRunning=!0,this.level=new g(this.canvas.height),this.gameOverMessage.reset(),this.keys={},requestAnimationFrame(this.gameLoop),console.log("Game restarted successfully!")}}new f().run();
